{
  "permissions": {
    "allow": [
      "Bash(env)",
      "Bash(ls:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(mkdir:*)",
      "Bash(python -m pytest tests/test_hook_analysis.py -v)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(PYTHONPATH=:*)",
      "Bash(find:*)",
      "Bash(node:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "Bash(diff:*)",
      "Bash(pnpm lint:*)",
      "Bash(source:*)",
      "Bash(NODE_ENV=development node -e \"\nrequire(''dotenv'').config({ path: ''../.env'' });\nconsole.log(''AI_SERVICE_URL:'', process.env.AI_SERVICE_URL);\nconsole.log(''Environment loaded successfully'');\n\")",
      "Bash(grep:*)",
      "Bash(pnpm dotenv:*)",
      "Bash(curl:*)",
      "Bash(pnpm prisma studio:*)",
      "Bash(uvicorn:*)",
      "Bash(kill:*)",
      "Bash(touch:*)",
      "Bash(npx prisma:*)",
      "Bash(pkill:*)",
      "Bash(ruff format:*)",
      "Bash(npm test:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm run test:*)",
      "Bash(npm run lint)",
      "Bash(ruff check:*)",
      "Bash(pnpm run-env-script:*)",
      "Bash(dotenv -e .env -- pnpm --filter web db:reset:*)",
      "Bash(dotenv:*)",
      "Bash(npm run:*)",
      "Bash(pnpm dev:*)",
      "Bash(cat:*)",
      "Bash(for file in *.md)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(echo)",
      "Bash(done)",
      "Bash(DATABASE_URL=\"postgresql://postgres:password@localhost:5432/deconstructor_db?schema=baokuan_app\" npx prisma db push)",
      "Bash(DATABASE_URL=\"postgresql://postgres:password@localhost:5432/deconstructor_db?schema=baokuan_app\" npx prisma db push --accept-data-loss)",
      "Bash(DATABASE_URL=\"postgresql://postgres:password@localhost:5432/deconstructor_db?schema=baokuan_app\" node cleanup-hashes.js)",
      "Bash(pnpm typecheck:*)",
      "Bash(npx tsc:*)",
      "Bash(/dev/null)",
      "Bash(pnpm build)",
      "Bash(psql:*)",
      "Bash(docker exec:*)",
      "Bash(git push:*)",
      "Bash(timeout 10 pnpm dev)",
      "mcp__linear-server__get_issue",
      "mcp__linear-server__create_comment",
      "mcp__linear-server__update_issue",
      "Bash(rg:*)",
      "Bash(grep -A 10 \"class APIResponse\" /Users/liumingwei/01-project/12-liumw/09-baokuan-jieqouqi/11-baokuan-jieqouqi-ai/app/schemas/script_management.py)",
      "Bash(ssh:*)",
      "Bash(docker system prune:*)",
      "Bash(docker builder:*)",
      "Bash(docker images:*)",
      "mcp__linear-server__get_team",
      "Bash(PGPASSWORD='SecurePass2024DB' psql -h 43.142.178.200 -U postgres -d deconstructor_db -c \"SELECT ''IDE连接测试成功'' as status;\")",
      "Bash(DATABASE_URL=\"postgresql://postgres:SecurePass2024DB@43.142.178.200:5432/deconstructor_db?schema=baokuan_app\" npx prisma db push --skip-generate)",
      "Bash(./deploy.sh:*)",
      "Bash(true)",
      "Bash(chmod:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:password@localhost:5432/deconstructor_db?schema=baokuan_app\" npx prisma migrate dev --name add_script_management_tables)",
      "Bash(./scripts/db-backup.sh:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:password@localhost:5432/deconstructor_db?schema=baokuan_app\" npx prisma migrate reset --force)",
      "Bash(DATABASE_URL=\"postgresql://postgres:password@localhost:5432/deconstructor_db?schema=baokuan_app\" npx prisma migrate deploy)",
      "Bash(DATABASE_URL=\"postgresql://postgres:password@localhost:5432/deconstructor_db?schema=baokuan_app\" docker-compose --env-file ../../.env -f docker-compose.yml exec -T db psql -U postgres -d deconstructor_db -f -)",
      "Bash(git reset:*)",
      "Bash(yt-dlp:*)",
      "Bash(ffprobe:*)",
      "Bash(ffmpeg:*)",
      "WebFetch(domain:cloud.tencent.com)",
      "Bash(pip show:*)",
      "Bash(timeout:*)"
    ],
    "deny": []
  }
}